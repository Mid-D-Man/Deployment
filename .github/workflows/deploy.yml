name: Deploy Blazor WASM PWA to GitHub Pages

on:
  push:
    branches: [ master ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'

      - name: Restore and Build
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore

      - name: Publish PWA
        run: dotnet publish Deployment/Deployment.csproj -c Release -o dist

      - name: Prepare GitHub Pages
        run: |
          mkdir -p pages
          cp -r dist/wwwroot/* pages/
          
          # Essential GitHub Pages fixes
          touch pages/.nojekyll
          cp pages/index.html pages/404.html
          
          # Fix base href for subpath
          sed -i 's|<base href="/" />|<base href="/${{ github.event.repository.name }}/" />|g' pages/index.html pages/404.html
          
          # Rename manifest for GitHub Pages compatibility
          if [ -f "pages/manifest.json" ]; then
            mv pages/manifest.json pages/manifest.webmanifest
            sed -i 's|href="manifest.json"|href="manifest.webmanifest"|g' pages/index.html pages/404.html
          fi
          
          # Update manifest paths
          if [ -f "pages/manifest.webmanifest" ]; then
            sed -i 's|"start_url": "/Deployment/"|"start_url": "/${{ github.event.repository.name }}/"|g' pages/manifest.webmanifest
            sed -i 's|"scope": "/Deployment/"|"scope": "/${{ github.event.repository.name }}/"|g' pages/manifest.webmanifest
          fi
          
          # Use published service worker
          if [ -f "pages/service-worker.published.js" ]; then
            mv pages/service-worker.published.js pages/service-worker.js
          fi
          
          # Critical: Create WASM MIME type headers
          cat > pages/_headers << 'EOF'
          /*.wasm
            Content-Type: application/wasm
          /*.dll
            Content-Type: application/octet-stream
          /*.webmanifest
            Content-Type: application/manifest+json
          EOF

      - name: Upload Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./pages

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        environment:
          name: github-pages
          url: ${{ steps.deployment.outputs.page_url }}