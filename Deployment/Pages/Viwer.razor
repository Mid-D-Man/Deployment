@page "/viewer"
@inject NavigationManager Navigation

<PageTitle>Viewer</PageTitle>

<h1>Content Viewer</h1>

<div class="viewer-container">
    <div class="viewer-header">
        <h3>Interactive Content Display</h3>
        <p>Navigate back to counter or explore other sections using the menu system.</p>
    </div>

    <div class="content-grid">
        <div class="content-card">
            <h4>Navigation Info</h4>
            <p>Current URL: <code>@Navigation.Uri</code></p>
            <p>Base URL: <code>@Navigation.BaseUri</code></p>
        </div>

        <div class="content-card">
            <h4>Menu Testing</h4>
            <p>Switch between navigation modes using the switcher in the top-right corner:</p>
            <ul>
                <li><strong>Side Navigation:</strong> Traditional left sidebar</li>
                <li><strong>Client Menu:</strong> Bottom-positioned mobile-style menu</li>
            </ul>
        </div>

        <div class="content-card">
            <h4>Interactive Elements</h4>
            <button class="btn btn-info" @onclick="UpdateContent">Refresh Content</button>
            <button class="btn btn-secondary" @onclick="GoBack">Back to Counter</button>
            <p class="update-status">@updateMessage</p>
        </div>

        <div class="content-card">
            <h4>Dynamic Content</h4>
            <p>Last updated: @DateTime.Now.ToString("HH:mm:ss")</p>
            <div class="progress-demo">
                <div class="progress-bar" style="width: @progressWidth%"></div>
            </div>
        </div>
    </div>
</div>

@code {
    private string updateMessage = "Ready for interaction";
    private int progressWidth = 45;

    protected override void OnInitialized()
    {
        // Simulate some initialization
        updateMessage = "Viewer initialized successfully";
    }

    private void UpdateContent()
    {
        updateMessage = $"Content refreshed at {DateTime.Now:HH:mm:ss}";
        progressWidth = new Random().Next(20, 100);
        StateHasChanged();
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/counter");
    }
}

<style>
    .viewer-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 1rem;
    }

    .viewer-header {
        text-align: center;
        margin-bottom: 2rem;
        padding: 1rem;
        background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        border-radius: 8px;
    }

    .content-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
        margin-top: 1rem;
    }

    .content-card {
        background: white;
        border: 1px solid #dee2e6;
        border-radius: 8px;
        padding: 1.5rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s ease;
    }

    .content-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    }

    .content-card h4 {
        color: #495057;
        margin-bottom: 1rem;
        border-bottom: 2px solid #007bff;
        padding-bottom: 0.5rem;
    }

    .content-card code {
        background: #f8f9fa;
        padding: 0.2rem 0.4rem;
        border-radius: 3px;
        font-size: 0.9rem;
        color: #e83e8c;
    }

    .btn {
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        margin-right: 0.5rem;
        margin-bottom: 0.5rem;
        transition: all 0.2s ease;
    }

    .btn-info {
        background-color: #17a2b8;
        color: white;
    }

    .btn-info:hover {
        background-color: #138496;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

    .btn-secondary:hover {
        background-color: #545b62;
    }

    .update-status {
        margin-top: 1rem;
        padding: 0.5rem;
        background: #d4edda;
        border: 1px solid #c3e6cb;
        border-radius: 4px;
        color: #155724;
    }

    .progress-demo {
        width: 100%;
        height: 20px;
        background: #e9ecef;
        border-radius: 10px;
        overflow: hidden;
        margin-top: 1rem;
    }

    .progress-bar {
        height: 100%;
        background: linear-gradient(90deg, #007bff, #0056b3);
        transition: width 0.5s ease;
        border-radius: 10px;
    }

  
</style>
